<template>
  <div><slot /></div>
</template>

<style lang="scss">
:host {
  display: block;
  line-height: 1.5;
  color: var(--color-dark-1);
  font-size: 14px;
}

a {
  text-decoration: underline;
  color: var(--color-teal-2);
}
a:hover {
  color: var(--color-teal-1);
  text-decoration: none;
}

em,
del {
  color: var(--color-grey-2);
}
strong,
strong em,
strong {
  color: var(--color-dark-3);
}
a {
  strong,
  em {
    color: inherit;
  }
}
em,
strong,
del {
  padding: 0 2px;
}
p {
  margin: 12px 0;
}
img {
  max-width: 100%;
}

blockquote.md-quote {
  margin: 10px 0;
  padding: 5px 10px;
  line-height: 1.5;
  border-left: 5px solid var(--color-teal-1);
  background: #f2faf7;
  color: var(--color-grey-2);
  p {
    margin: 0;
  }
}

fieldset.md-hr {
  margin: 30px 0;
  border: 0;
  border-top: 1px dashed var(--color-plain-3);

  legend {
    padding: 0 5px;
    color: var(--color-grey-1);
    text-align: center;
    font-size: 12px;
    &::before {
      content: '华丽丽的分割线';
    }
  }
}
ol {
  margin-left: 1em;
  list-style: decimal outside none;
}
ul {
  margin-left: 1em;
  list-style: disc outside none;
}
li {
  margin: 0.5em 0;
}
li ol {
  margin-left: 1em;
}
li ul {
  margin-left: 1em;
  list-style-type: circle;
}
li ol ul,
li ul ul {
  list-style-type: square;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 15px 0;
  line-height: 2;
  font-weight: bold;
  font-size: 16px;

  code.inline {
    background: none;
  }
  a {
    text-decoration: none;
    color: #333;
  }
}
h3,
h4,
h5,
h6 {
  a {
    &::before {
      content: '∮ ';
      color: var(--color-teal-1);
      font-weight: normal;
    }
  }
}
h1 {
  margin: 0 0 30px;
  font-size: 24px;
  text-align: center;
}
h2 {
  margin: 20px 0;
  font-size: 22px;
  border-bottom: 1px solid var(--color-plain-2);
}
h3 {
  margin: 20px 0 15px;
  font-size: 20px;
}
h4 {
  font-size: 18px;
}

table {
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;

  tr {
    background-color: #fff;
  }
  thead tr {
    background: var(--color-plain-1);
  }
  th,
  td {
    padding: 6px 13px;
    border: 1px solid var(--color-plain-2);
  }
  th {
    font-weight: bold;
  }
  tr:nth-child(2n) {
    background-color: #fcfdff;
  }
}

code.inline {
  display: inline;
  margin: 0 2px;
  padding: 0 2px;
  color: var(--color-orange-3);
  background: var(--color-plain-1);
  border-radius: 2px;
  font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;
}
</style>

<script>
import $ from '../utils'
import markd from './core'

import '../code/index'
import '../form/checkbox'

export default class Markd {
  props = {
    toc: false
  }

  __init__() {
    /* render */

    var elem = this.root.children[1]
    this.__BOX__ = elem
  }

  __parse__() {
    var txt = this.textContent.trim()
    this.value = txt
  }

  set value(txt) {
    if (txt) {
      this.__BOX__.innerHTML = markd(txt)
      this.textContent = ''
    }
  }

  clear() {
    this.__BOX__.textContent = ''
    this.textContent = ''
  }

  mounted() {
    this.__parse__()

    this._headClickFn = $.bind(this.__BOX__, 'click', ev => {
      if (ev.target.className === 'md-head-link') {
        var ot = ev.target.offsetTop
        document.documentElement.scrollTop = ot
      }
    })

    this.__observer = new MutationObserver(_ => {
      this.__parse__()
    })

    this.__observer.observe(this, {
      childList: true,
      subtree: true,
      characterData: true
    })
  }

  unmount() {
    $.unbind(this.__BOX__, 'click', this._headClickFn)
    this.__observer.disconnect()
    this.clear()
  }
}
</script>
