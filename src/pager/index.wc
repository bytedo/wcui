<template>
  <div class="layout"></div>
</template>

<style lang="scss">
:host {
  display: block;
  line-height: 1;
  font-size: 14px;
  user-select: none;
  -moz-user-select: none;
  color: var(--color-dark-1);

  .layout {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10px auto;
  }

  .item {
    min-width: 32px;
    --padding: 0;
    margin: 0 5px;
    --icon-size: 12px;
    border-radius: 4px;

    &.curr {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      height: 32px;
      background: var(--color-teal-1);
      color: #fff;
    }
  }

  input {
    width: 48px;
    height: 32px;
    padding: 0 4px;
    border: 2px solid var(--color-plain-2);
    border-radius: 4px;
    text-align: center;
    outline: none;
  }
}

:host([circle]) .item {
  border-radius: 50%;
}

:host([red]) .curr {
  background: var(--color-red-1);
}

:host([blue]) .curr {
  background: var(--color-blue-1);
}

:host([green]) .curr {
  background: var(--color-green-1);
}

:host([orange]) .curr {
  background: var(--color-orange-1);
}

:host([grey]) .curr {
  background: var(--color-grey-1);
}

:host([dark]) .curr {
  background: var(--color-dark-1);
}
</style>

<script>
import $ from '../utils'
import '../form/button'

// 计算页码
function calculate(curr, total) {
  var arr = []
  var fixed = 0
  var half = curr < 3 ? 6 - curr : 2 // 中间页码

  // 总页码小于2
  if (total < 2) {
    arr.push({ to: curr, txt: curr })
    return arr
  }

  // 当前页面比半数多时, 前面的用省略号代替
  if (curr - half > 1 && total > 5) {
    var to = curr - 2 * half
    to = to < 1 ? 1 : to
    arr.push({ to, txt: '...' })
  }

  if (total - curr < half) {
    fixed = half - total + curr
  }

  // 把页码拆成2部分来
  for (var i = curr - half - fixed; i < curr + half + 1 && i <= total; i++) {
    if (i > 0) {
      arr.push({ to: i, txt: i })
    }
  }

  // 总页码太多时, 以省略号代替
  if (curr + half < total) {
    var to = curr + 2 * half
    to = to > total ? total : to
    arr.push({ to, txt: '...' })
  }

  return arr
}

const LAYOUT_DICT = {
  home: e =>
    `<wc-button data-act="1" ${
      e ? 'disabled' : ''
    } class="item" icon="dbl-left"></wc-button>`,
  end: e =>
    `<wc-button data-act="end" ${
      e ? 'disabled' : ''
    } class="item" icon="dbl-right"></wc-button>`,
  prev: e =>
    `<wc-button data-act="prev" ${
      e ? 'disabled' : ''
    } class="item" icon="left"></wc-button>`,
  next: e =>
    `<wc-button data-act="next" ${
      e ? 'disabled' : ''
    } class="item" icon="right"></wc-button>`,
  curr: n => `<span class="curr item">${n}</span>`,
  info: (t, p) => `<span class="item">共 ${t}条, ${p}页</span>`,
  jump: n =>
    `<section class="item"><input maxlength="6" value="${n}"><wc-button data-act="go" class="item">Go</wc-button></section>`
}

//
export default class Pager {
  props = {
    layout: 'home, prev, pages, next, end',
    total: 0,
    curr: 1,
    pagesize: 20
  }

  state = {
    totalpage: 0
  }

  __init__() {
    /* render */
    this.__LAYOUT__ = this.root.children[1]
  }

  update() {
    var { curr, total, layout } = this.props
    var { totalpage } = this.state

    layout = layout.split(',').map(name => {
      //
      switch (name.trim()) {
        case 'pages':
          return calculate(curr, totalpage)
            .map(it =>
              curr === it.to
                ? LAYOUT_DICT.curr(curr)
                : `<wc-button class="item" data-act="${it.to}">${
                    it.txt
                  }</wc-button>`
            )
            .join('')

        case 'home':
          return LAYOUT_DICT.home(curr === 1)

        case 'prev':
          return LAYOUT_DICT.prev(curr === 1)

        case 'next':
          return LAYOUT_DICT.next(curr === totalpage)

        case 'end':
          return LAYOUT_DICT.end(curr === totalpage)

        case 'curr':
          return LAYOUT_DICT.curr(curr)

        case 'info':
          return LAYOUT_DICT.info(total, totalpage)

        case 'jump':
          return LAYOUT_DICT.jump(curr)

        default:
          return ''
      }
    })

    this.__LAYOUT__.innerHTML = layout.join('')
  }

  get curr() {
    return this.props.curr
  }

  set curr(n) {
    n = +n
    if (n > 0) {
      if (n > this.state.totalpage) {
        n = this.state.totalpage
      }
      this.props.curr = n
      this.update()
    }
  }

  set pagesize(n) {
    n = +n
    if (n > 0) {
      this.props.pagesize = n
      this.state.totalpage = Math.ceil(this.props.total / n)
      this.update()
    }
  }

  set total(n) {
    n = +n
    if (n > 0) {
      this.props.total = n
      this.state.totalpage = Math.ceil(n / this.props.pagesize)
      this.update()
    }
  }

  mounted() {
    var { pagesize, total } = this.props
    this.state.totalpage = Math.ceil(total / pagesize)

    this.update()

    $.bind(this.__LAYOUT__, 'click', ev => {
      if (ev.target.tagName === 'WC-BUTTON') {
        let { curr } = this.props
        let { totalpage } = this.state
        let num = +ev.target.dataset.act

        if (num !== num) {
          num = ev.target.dataset.act
        }

        switch (num) {
          case 'prev':
            if (curr > 1) {
              num = curr - 1
            } else {
              num = 1
            }
            break
          case 'next':
            if (curr < totalpage) {
              num = curr + 1
            } else {
              num = totalpage
            }
            break
          case 'end':
            num = totalpage
            break

          case 'go':
            var n = +this.__LAYOUT__.querySelector('input').value
            if (n > 0 && n <= totalpage) {
              num = n
            } else {
              num = curr
            }
            this.__LAYOUT__.querySelector('input').value = num
            break
        }

        if (num === curr) {
          return
        }

        this.props.curr = num
        this.update()
        this.dispatchEvent(new CustomEvent('page-change', { detail: num }))
      }
    })
  }

  watch() {
    switch (name) {
      case 'layout':
        this.props.layout = val
        this.update()
        break

      case 'total':
      case 'pagesize':
      case 'curr':
        if (+val > 0) {
          this[name] = +val
        }
        break
    }
  }
}
</script>
