<template>
  <div class="layout">
    <button data-page="1" class="home">|<</button>
    <button data-page="prev" class="prev"><</button>
    <div class="pager"></div>
    <button data-page="next" class="next">></button>
    <button data-page="end" class="end">>|</button>
  </div>
</template>

<style lang="scss">
:host {
  display: block;
  line-height: 1;
  color: nth($cd, 1);
  font-size: 14px;
  user-select: none;
  -moz-user-select: none;

  .layout {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10px auto;
  }

  button {
    min-width: 32px;
    height: 32px;
    padding: 0 8px;
    margin: 0 3px;
    background: nth($cp, 1);
    border: 0;
    border-radius: 4px;
    outline: none;
    font-size: inherit;
    color: inherit;

    &:hover {
      background: nth($cp, 2);
    }

    &[curr] {
      background: nth($ct, 1);
      color: #fff;
    }
  }
}

:host([simple]) {
  .home,
  .end {
    display: none;
  }
}

:host([circle]) button {
  border-radius: 50%;
}

:host([color='red']) button[curr] {
  background: nth($cr, 1);
}

:host([color='blue']) button[curr] {
  background: nth($cb, 1);
}

:host([color='green']) button[curr] {
  background: nth($cg, 1);
}

:host([color='teal']) button[curr] {
  background: nth($ct, 1);
}

:host([color='orange']) button[curr] {
  background: nth($co, 1);
}

:host([color='dark']) button[curr] {
  background: nth($cd, 1);
}

:host([color='purple']) button[curr] {
  background: nth($cpp, 1);
}
</style>

<script>
// 计算页码
function calculate(curr, total, simple) {
  var arr = []
  var fixed = 0
  var half = curr < 3 ? 6 - curr : 2 // 中间页码

  // 总页码小于2, 或者简单模式下
  if (total < 2 || simple) {
    arr.push({ to: curr, txt: curr })
    return arr
  }

  // 当前页面比半数多时, 前面的用省略号代替
  if (curr - half > 1 && total > 5) {
    var to = curr - 2 * half
    to = to < 1 ? 1 : to
    arr.push({ to, txt: '...' })
  }

  if (total - curr < half) {
    fixed = half - total + curr
  }

  // 把页码拆成2部分来
  for (var i = curr - half - fixed; i < curr + half + 1 && i <= total; i++) {
    if (i > 0) {
      arr.push({ to: i, txt: i })
    }
  }

  // 总页码太多时, 以省略号代替
  if (curr + half < total) {
    var to = curr + 2 * half
    to = to > total ? total : to
    arr.push({ to, txt: '...' })
  }

  return arr
}
export default class Pager {
  props = {
    layout: 'home, prev, next, end',
    total: 0,
    curr: 1,
    pagesize: 20,
    simple: false
  }
  __init__() {
    /* render */

    this.__LAYOUT__ = this.root.children[1]
    this.__HOME__ = this.__LAYOUT__.children[0]
    this.__PREV__ = this.__LAYOUT__.children[1]
    this.__PAGE__ = this.__LAYOUT__.children[2]
    this.__NEXT__ = this.__LAYOUT__.children[3]
    this.__END__ = this.__LAYOUT__.children[4]
  }

  update() {
    var { curr, totalpage, simple } = this.props

    var list = calculate(curr, totalpage, simple)

    this.__PAGE__.innerHTML = list
      .map(
        it =>
          `<button ${curr === it.to ? 'curr' : ''} data-page="${it.to}">${
            it.txt
          }</button>`
      )
      .join('')
  }

  mounted() {
    var { pagesize, total } = this.props
    this.props.totalpage = Math.ceil(total / pagesize)

    this.update()

    this.__LAYOUT__.addEventListener(
      'click',
      ev => {
        if (ev.target.tagName === 'BUTTON') {
          var { curr, totalpage } = this.props
          var page = ev.target.dataset.page
          var num = +page
          if (num === num) {
            if (num === curr) {
              return
            }
          } else {
            switch (page) {
              case 'prev':
                num = curr - 1
                if (num < 1) {
                  return
                }
                break
              case 'next':
                num = curr + 1
                if (num > totalpage) {
                  return
                }
                break
              case 'end':
                if (totalpage === curr) {
                  return
                }
                num = totalpage
                break
            }
          }
          this.props.curr = num
          this.update()
          this.dispatchEvent(
            new CustomEvent('pick', {
              detail: num
            })
          )
        }
      },
      false
    )
  }

  watch() {
    switch (name) {
      case 'total':
      case 'pagesize':
      case 'curr':
        this.props[name] = +val || this.props[name]
        var { pagesize, total } = this.props
        this.props.totalpage = Math.ceil(total / pagesize)
        this.update()
        break

      case 'simple':
        this.props.simple = true
        break
    }
  }
}
</script>
