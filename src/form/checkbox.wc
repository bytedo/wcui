<template>
  <slot />
</template>

<style lang="scss">
:host {
  display: inline-flex;
}
</style>

<script>
import $ from '../utils'
import './checkbox-item'

export default class CheckboxGroup {
  props = {
    value: '',
    disabled: false,
    readonly: false
  }

  __init__() {
    /* render */
  }

  _updateChildrenStat() {
    Array.from(this.children).forEach(it => {
      if (it.tagName === 'WC-CHECKBOX' && it.root) {
        if (this.value.includes(it.value)) {
          it.checked = true
        } else {
          it.checked = false
        }
      }
    })
  }

  get value() {
    return this.props.value
  }

  set value(val) {
    if (val === this.props.value) {
      return
    }
    this.props.value = [...val]
    this._updateChildrenStat()
  }

  get readOnly() {
    return this.props.readonly
  }

  set readOnly(val) {
    var type = typeof val

    if (val === this.props.readonly) {
      return
    }
    if ((type === 'boolean' && val) || type !== 'boolean') {
      this.props.readonly = true
      this.setAttribute('readonly', '')
    } else {
      this.props.readonly = false
      this.removeAttribute('readonly')
    }
  }

  get disabled() {
    return this.props.disabled
  }

  set disabled(val) {
    var type = typeof val

    if (val === this.props.disabled) {
      return
    }
    if ((type === 'boolean' && val) || type !== 'boolean') {
      this.props.disabled = true
      this.setAttribute('disabled', '')
    } else {
      this.props.disabled = false
      this.removeAttribute('disabled')
    }
  }

  mounted() {
    this._pickedFn = $.bind(this, 'child-picked', ev => {
      var tmp = [...this.props.value]
      var idx = tmp.indexOf(ev.detail.value)
      if (ev.detail.checked) {
        if (idx < 0) {
          tmp.push(ev.detail.value)
        }
      } else {
        if (~idx) {
          tmp.splice(idx, 1)
        }
      }
      this.value = tmp
      this.dispatchEvent(new CustomEvent('input'))
    })
  }

  unmount() {
    $.unbind(this, 'child-picked', this._pickedFn)
  }

  watch() {
    switch (name) {
      case 'value':
        if (val) {
          this.value = val.split(',').map(it => it.trim())
        }
        break

      case 'readonly':
      case 'disabled':
        var k = name
        if (k === 'readonly') {
          k = 'readOnly'
        }
        Array.from(this.children).forEach(it => {
          if (it.tagName === 'WC-CHECKBOX' && it.root) {
            it[k] = val !== null
          }
        })
        break
    }
  }
}
</script>
